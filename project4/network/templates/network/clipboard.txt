'load_post' post.id'


def edit_post(request, post_id):

    post_to_load = Mypost.objects.get(pk=post_id)
    if request.method =="POST" and "edit_post" in request.POST:

        edit_txt = request.POST["edit_txt"]
        post_to_load.description=edit_txt
        post_to_load.save()

        return HttpResponseRedirect(reverse("index"))
    if request.method == "POST" and "del_post" in request.POST:
        post_to_load.delete()
        return HttpResponseRedirect(reverse("index"))

    else:
        return render(request, "network/post.html",{"post_to_load":post_to_load})

        class Entry(models.Model):
    blog = models.ForeignKey(Blog, on_delete=models.CASCADE)
    headline = models.CharField(max_length=255)
    body_text = models.TextField()
    pub_date = models.DateField()
    mod_date = models.DateField(default=date.today)
    authors = models.ManyToManyField(Author)


    e = Entry.objects.get(id=3)
e.authors.all() # Returns all Author objects for this Entry.